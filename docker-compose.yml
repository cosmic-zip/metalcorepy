version: "3.8"

services:
  web:
    container_name: metalcorepy_app
    build: ./app
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev

  postgres:
    image: postgres:15
    container_name: metalcorepy_db
    restart: always
    env_file:
      - ./.env.dev
    ports:
      - "5887:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
  redis:
    image: redis:7
    container_name: redis_container
    restart: always
    networks:
      default:
        ipv4_address: 172.28.0.11
    ports:
      - "6379:6379"

  celery:
    build: .
    container_name: celery_container
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      default:
        ipv4_address: 172.28.0.12

  celery-beat:
    build: .
    container_name: celery_beat_container
    command: celery -A core beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - celery
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      default:
        ipv4_address: 172.28.0.13

  opa:
    image: openpolicyagent/opa:latest
    container_name: metalcorepy_opa
    ports:
      - "8181:8181"
    volumes:
      - ./security:/policy
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "--addr=:8181"
      - "/policy"
    restart: unless-stopped

volumes:
  postgres_data:

